// Base configuration template for generating Python classes
module base_config

// Base class for all configurations
abstract class BaseConfig {
  name: String
  version: String = "1.0"
}

// State configuration
class StateConfig extends BaseConfig {
  type: String
  success_mode: String
  lower_bound: Listing<Float>
  upper_bound: Listing<Float>
  threshold: Float = 0.05
  space: Listing<String>
}

// Task configuration  
class TaskConfig extends BaseConfig {
  description: String
  states: Mapping<String, StateConfig>
  success_conditions: Listing<String>
}

// Network configuration
class NetworkConfig extends BaseConfig {
  architecture: String
  hidden_dims: Listing<Int>
  activation: String = "relu"
  dropout: Float = 0.1
  batch_norm: Boolean = true
}

// Training configuration
class TrainingConfig extends BaseConfig {
  batch_size: Int = 32
  learning_rate: Float = 0.001
  epochs: Int = 100
  optimizer: String = "adam"
  scheduler: String? = null
}

// Environment configuration
class EnvironmentConfig extends BaseConfig {
  env_type: String
  max_episode_steps: Int = 1000
  reward_type: String = "sparse"
  observation_space: Mapping<String, String>
}
