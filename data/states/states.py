from hrl.state.calvin_states import (
    BoolState,
    EulerState,
    FlipState,
    QuatState,
    RangeState,
)
from hrl.state.logic.success_condition import (
    AreaSuccessCondition,
    IgnoreSuccessCondition,
    EulerPrecisionSuccessCondition,
)

_S = {
    "ee_position": EulerState(
        name="ee_position",
        id=0,
        success_condition=EulerPrecisionSuccessCondition(),
    ),
    "base__slide_position": EulerState(
        name="base__slide_position",
        id=1,
        success_condition=EulerPrecisionSuccessCondition(),
    ),
    "base__drawer_position": EulerState(
        name="base__drawer_position",
        id=2,
        success_condition=EulerPrecisionSuccessCondition(),
    ),
    "base__button_position": EulerState(
        name="base__button_position",
        id=3,
        success_condition=EulerPrecisionSuccessCondition(),
    ),
    "led_position": EulerState(
        name="led_position",
        id=4,
        success_condition=EulerPrecisionSuccessCondition(),
    ),
    "block_red_position": EulerState(
        name="block_red_position",
        id=14,
        success_condition=AreaSuccessCondition(),
    ),
    "block_blue_position": EulerState(
        name="block_blue_position",
        id=15,
        success_condition=AreaSuccessCondition(),
    ),
    "block_pink_position": EulerState(
        name="block_pink_position",
        id=16,
        success_condition=AreaSuccessCondition(),
    ),
    "ee_rotation": QuatState(
        name="ee_rotation",
        id=5,
        success_condition=EulerPrecisionSuccessCondition(),
    ),
    "base__slide_rotation": QuatState(
        name="base__slide_rotation",
        id=6,
        success_condition=EulerPrecisionSuccessCondition(),
    ),
    "base__drawer_rotation": QuatState(
        name="base__drawer_rotation",
        id=7,
        success_condition=EulerPrecisionSuccessCondition(),
    ),
    "base__button_rotation": QuatState(
        name="base__button_rotation",
        id=8,
        success_condition=EulerPrecisionSuccessCondition(),
    ),
    "led_rotation": QuatState(
        name="led_rotation",
        id=9,
        success_condition=EulerPrecisionSuccessCondition(),
    ),
    "block_red_rotation": QuatState(
        name="block_red_rotation",
        id=17,
        success_condition=IgnoreSuccessCondition(),
    ),
    "block_blue_rotation": QuatState(
        name="block_blue_rotation",
        id=18,
        success_condition=IgnoreSuccessCondition(),
    ),
    "block_pink_rotation": QuatState(
        name="block_pink_rotation",
        id=19,
        success_condition=IgnoreSuccessCondition(),
    ),
    "ee_scalar": BoolState(
        name="ee_scalar",
        id=10,
        success_condition=EulerPrecisionSuccessCondition(),
    ),
    "base__slide_scalar": RangeState(
        name="base__slide_scalar",
        id=11,
        lower_bound=0.0,
        upper_bound=0.28,
    ),
    "base__drawer_scalar": RangeState(
        name="base__drawer_scalar",
        id=12,
        lower_bound=0.0,
        upper_bound=0.22,
    ),
    "base__button_scalar": FlipState(
        name="base__button_scalar",
        id=13,
    ),
    "block_red_scalar": BoolState(
        name="block_red_scalar",
        id=20,
    ),
    "block_blue_scalar": BoolState(
        name="block_blue_scalar",
        id=21,
    ),
    "block_pink_scalar": BoolState(
        name="block_pink_scalar",
        id=22,
    ),
}

STATES_BY_TAG = {
    "Debug": [
        _S["ee_position"],
        _S["base__slide_position"],
        _S["base__drawer_position"],
        _S["base__button_position"],
        _S["led_position"],
        _S["block_red_position"],
        _S["block_blue_position"],
        _S["block_pink_position"],
        _S["ee_rotation"],
        _S["base__slide_rotation"],
        _S["base__drawer_rotation"],
        _S["base__button_rotation"],
        _S["led_rotation"],
        _S["block_red_rotation"],
        _S["block_blue_rotation"],
        _S["block_pink_rotation"],
        _S["ee_scalar"],
        _S["base__slide_scalar"],
        _S["base__drawer_scalar"],
        _S["base__button_scalar"],
        _S["block_red_scalar"],
        _S["block_blue_scalar"],
        _S["block_pink_scalar"],
    ],
    "Normal": [
        _S["ee_position"],
        _S["base__slide_position"],
        _S["base__drawer_position"],
        _S["base__button_position"],
        _S["led_position"],
        _S["block_red_position"],
        _S["block_blue_position"],
        _S["block_pink_position"],
        _S["ee_rotation"],
        _S["base__slide_rotation"],
        _S["base__drawer_rotation"],
        _S["base__button_rotation"],
        _S["led_rotation"],
        _S["block_red_rotation"],
        _S["block_blue_rotation"],
        _S["block_pink_rotation"],
        _S["ee_scalar"],
        _S["base__slide_scalar"],
        _S["base__drawer_scalar"],
        _S["base__button_scalar"],
        _S["block_red_scalar"],
        _S["block_blue_scalar"],
        _S["block_pink_scalar"],
    ],
    "Minimal": [
        _S["ee_position"],
        _S["base__slide_position"],
        _S["base__drawer_position"],
        _S["base__button_position"],
        _S["led_position"],
        _S["ee_rotation"],
        _S["base__slide_rotation"],
        _S["base__drawer_rotation"],
        _S["base__button_rotation"],
        _S["led_rotation"],
        _S["ee_scalar"],
        _S["base__slide_scalar"],
        _S["base__drawer_scalar"],
        _S["base__button_scalar"],
    ],
}
